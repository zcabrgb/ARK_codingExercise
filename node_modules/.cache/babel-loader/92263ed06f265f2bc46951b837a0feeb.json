{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/apk-coding-exercise/src/components/Table.js\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport TableData from \"../data/data.json\";\nimport React from \"react\";\nconst columnKey = Object.keys(TableData[0]);\n\nconst sort_by = (field, reverse, primer) => {\n  const key = primer ? function (x) {\n    return primer(x[field]);\n  } : function (x) {\n    return x[field];\n  };\n  reverse = !reverse ? 1 : -1;\n  return function (a, b) {\n    return a = key(a), b = key(b), reverse * ((a > b) - (b > a));\n  };\n};\n\nexport default (props => {\n  // URL param set to upper to match json keys\n  var URLKey = props.match.params[0].charAt(0).toUpperCase() + props.match.params[0].slice(1);\n  console.log(props);\n  console.log(columnKey);\n\n  if (columnKey.includes(URLKey)) {\n    if (URLKey === \"City\" || URLKey === \"Country\") {\n      TableData.sort(sort_by(URLKey, false, a => a.toUpperCase()));\n    } else TableData.sort(sort_by(URLKey, false, parseInt));\n  } else TableData.sort(sort_by(\"#\", false, parseInt));\n\n  var columns = [];\n  columnKey.forEach(key => columns.push({\n    Header: key,\n    accessor: key\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(ReactTable, {\n    data: TableData,\n    columns: columns,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/mac/Documents/apk-coding-exercise/src/components/Table.js"],"names":["ReactTable","TableData","React","columnKey","Object","keys","sort_by","field","reverse","primer","key","x","a","b","props","URLKey","match","params","charAt","toUpperCase","slice","console","log","includes","sort","parseInt","columns","forEach","push","Header","accessor"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,aAAvB;AACA,OAAO,6BAAP;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYJ,SAAS,CAAC,CAAD,CAArB,CAAlB;;AAEA,MAAMK,OAAO,GAAG,CAACC,KAAD,EAAQC,OAAR,EAAiBC,MAAjB,KAA4B;AAC1C,QAAMC,GAAG,GAAGD,MAAM,GACd,UAASE,CAAT,EAAY;AACV,WAAOF,MAAM,CAACE,CAAC,CAACJ,KAAD,CAAF,CAAb;AACD,GAHa,GAId,UAASI,CAAT,EAAY;AACV,WAAOA,CAAC,CAACJ,KAAD,CAAR;AACD,GANL;AAQAC,EAAAA,OAAO,GAAG,CAACA,OAAD,GAAW,CAAX,GAAe,CAAC,CAA1B;AAEA,SAAO,UAASI,CAAT,EAAYC,CAAZ,EAAe;AACpB,WAAQD,CAAC,GAAGF,GAAG,CAACE,CAAD,CAAR,EAAeC,CAAC,GAAGH,GAAG,CAACG,CAAD,CAAtB,EAA4BL,OAAO,IAAI,CAACI,CAAC,GAAGC,CAAL,KAAWA,CAAC,GAAGD,CAAf,CAAJ,CAA1C;AACD,GAFD;AAGD,CAdD;;AAgBA,gBAAeE,KAAK,IAAI;AACtB;AACA,MAAIC,MAAM,GACRD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmB,CAAnB,EAAsBC,MAAtB,CAA6B,CAA7B,EAAgCC,WAAhC,KACAL,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmB,CAAnB,EAAsBG,KAAtB,CAA4B,CAA5B,CAFF;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYnB,SAAZ;;AAEA,MAAIA,SAAS,CAACoB,QAAV,CAAmBR,MAAnB,CAAJ,EAAgC;AAC9B,QAAIA,MAAM,KAAK,MAAX,IAAqBA,MAAM,KAAK,SAApC,EAA+C;AAC7Cd,MAAAA,SAAS,CAACuB,IAAV,CAAelB,OAAO,CAACS,MAAD,EAAS,KAAT,EAAgBH,CAAC,IAAIA,CAAC,CAACO,WAAF,EAArB,CAAtB;AACD,KAFD,MAEOlB,SAAS,CAACuB,IAAV,CAAelB,OAAO,CAACS,MAAD,EAAS,KAAT,EAAgBU,QAAhB,CAAtB;AACR,GAJD,MAIOxB,SAAS,CAACuB,IAAV,CAAelB,OAAO,CAAC,GAAD,EAAM,KAAN,EAAamB,QAAb,CAAtB;;AAEP,MAAIC,OAAO,GAAG,EAAd;AACAvB,EAAAA,SAAS,CAACwB,OAAV,CAAkBjB,GAAG,IACnBgB,OAAO,CAACE,IAAR,CAAa;AACXC,IAAAA,MAAM,EAAEnB,GADG;AAEXoB,IAAAA,QAAQ,EAAEpB;AAFC,GAAb,CADF;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAET,SAAlB;AAA6B,IAAA,OAAO,EAAEyB,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CA5BD","sourcesContent":["import ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport TableData from \"../data/data.json\";\nimport React from \"react\";\n\nconst columnKey = Object.keys(TableData[0]);\n\nconst sort_by = (field, reverse, primer) => {\n  const key = primer\n    ? function(x) {\n        return primer(x[field]);\n      }\n    : function(x) {\n        return x[field];\n      };\n\n  reverse = !reverse ? 1 : -1;\n\n  return function(a, b) {\n    return (a = key(a)), (b = key(b)), reverse * ((a > b) - (b > a));\n  };\n};\n\nexport default props => {\n  // URL param set to upper to match json keys\n  var URLKey =\n    props.match.params[0].charAt(0).toUpperCase() +\n    props.match.params[0].slice(1);\n\n  console.log(props);\n  console.log(columnKey);\n\n  if (columnKey.includes(URLKey)) {\n    if (URLKey === \"City\" || URLKey === \"Country\") {\n      TableData.sort(sort_by(URLKey, false, a => a.toUpperCase()));\n    } else TableData.sort(sort_by(URLKey, false, parseInt));\n  } else TableData.sort(sort_by(\"#\", false, parseInt));\n\n  var columns = [];\n  columnKey.forEach(key =>\n    columns.push({\n      Header: key,\n      accessor: key\n    })\n  );\n\n  return (\n    <div>\n      <ReactTable data={TableData} columns={columns} />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}