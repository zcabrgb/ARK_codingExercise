{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/apk-coding-exercise/src/components/Table.js\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport TableData from \"../data/data.json\";\nimport React from \"react\";\nconst columnKey = Object.keys(TableData[0]);\nvar columns = [];\n\nconst sort_by = (field, reverse, primer) => {\n  const key = primer ? function (x) {\n    return primer(x[field]);\n  } : function (x) {\n    return x[field];\n  };\n  reverse = !reverse ? 1 : -1;\n  return function (a, b) {\n    return a = key(a), b = key(b), reverse * ((a > b) - (b > a));\n  };\n};\n\nexport default (props => {\n  console.log(props);\n  var sortKey = props.sortKey[0].toUpperCase;\n\n  if (columns.includes(sortKey)) {\n    if (sortKey === \"City\" || sortKey === \"Country\") {\n      TableData.sort(sort_by(sortKey, false, a => a.toUpperCase()));\n    } else TableData.sort(sort_by(sortKey, false, parseInt));\n  }\n\n  columnKey.forEach(key => columns.push({\n    Header: key,\n    accessor: key\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(ReactTable, {\n    data: TableData,\n    columns: columns,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/mac/Documents/apk-coding-exercise/src/components/Table.js"],"names":["ReactTable","TableData","React","columnKey","Object","keys","columns","sort_by","field","reverse","primer","key","x","a","b","props","console","log","sortKey","toUpperCase","includes","sort","parseInt","forEach","push","Header","accessor"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,aAAvB;AACA,OAAO,6BAAP;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYJ,SAAS,CAAC,CAAD,CAArB,CAAlB;AACA,IAAIK,OAAO,GAAG,EAAd;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,OAAR,EAAiBC,MAAjB,KAA4B;AAC1C,QAAMC,GAAG,GAAGD,MAAM,GACd,UAASE,CAAT,EAAY;AACV,WAAOF,MAAM,CAACE,CAAC,CAACJ,KAAD,CAAF,CAAb;AACD,GAHa,GAId,UAASI,CAAT,EAAY;AACV,WAAOA,CAAC,CAACJ,KAAD,CAAR;AACD,GANL;AAQAC,EAAAA,OAAO,GAAG,CAACA,OAAD,GAAW,CAAX,GAAe,CAAC,CAA1B;AAEA,SAAO,UAASI,CAAT,EAAYC,CAAZ,EAAe;AACpB,WAAQD,CAAC,GAAGF,GAAG,CAACE,CAAD,CAAR,EAAeC,CAAC,GAAGH,GAAG,CAACG,CAAD,CAAtB,EAA4BL,OAAO,IAAI,CAACI,CAAC,GAAGC,CAAL,KAAWA,CAAC,GAAGD,CAAf,CAAJ,CAA1C;AACD,GAFD;AAGD,CAdD;;AAgBA,gBAAeE,KAAK,IAAI;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAIG,OAAO,GAAGH,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiBC,WAA/B;;AAEA,MAAIb,OAAO,CAACc,QAAR,CAAiBF,OAAjB,CAAJ,EAA+B;AAC7B,QAAIA,OAAO,KAAK,MAAZ,IAAsBA,OAAO,KAAK,SAAtC,EAAiD;AAC/CjB,MAAAA,SAAS,CAACoB,IAAV,CAAed,OAAO,CAACW,OAAD,EAAU,KAAV,EAAiBL,CAAC,IAAIA,CAAC,CAACM,WAAF,EAAtB,CAAtB;AACD,KAFD,MAEOlB,SAAS,CAACoB,IAAV,CAAed,OAAO,CAACW,OAAD,EAAU,KAAV,EAAiBI,QAAjB,CAAtB;AACR;;AAEDnB,EAAAA,SAAS,CAACoB,OAAV,CAAkBZ,GAAG,IACnBL,OAAO,CAACkB,IAAR,CAAa;AACXC,IAAAA,MAAM,EAAEd,GADG;AAEXe,IAAAA,QAAQ,EAAEf;AAFC,GAAb,CADF;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEV,SAAlB;AAA6B,IAAA,OAAO,EAAEK,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAtBD","sourcesContent":["import ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport TableData from \"../data/data.json\";\nimport React from \"react\";\n\nconst columnKey = Object.keys(TableData[0]);\nvar columns = [];\n\nconst sort_by = (field, reverse, primer) => {\n  const key = primer\n    ? function(x) {\n        return primer(x[field]);\n      }\n    : function(x) {\n        return x[field];\n      };\n\n  reverse = !reverse ? 1 : -1;\n\n  return function(a, b) {\n    return (a = key(a)), (b = key(b)), reverse * ((a > b) - (b > a));\n  };\n};\n\nexport default props => {\n  console.log(props);\n  var sortKey = props.sortKey[0].toUpperCase;\n\n  if (columns.includes(sortKey)) {\n    if (sortKey === \"City\" || sortKey === \"Country\") {\n      TableData.sort(sort_by(sortKey, false, a => a.toUpperCase()));\n    } else TableData.sort(sort_by(sortKey, false, parseInt));\n  }\n\n  columnKey.forEach(key =>\n    columns.push({\n      Header: key,\n      accessor: key\n    })\n  );\n\n  return (\n    <div>\n      <ReactTable data={TableData} columns={columns} />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}